
/*Background Gradient Color*/

@mixin bbg($d1, $d2, $color1, $color2){
  background-image: -moz-linear-gradient($d1, $color1 0%, $color2 100%); /* FF3.6+ */
  background-image: -webkit-gradient(linear, $d1 $d1, $d1 $d2, color-stop(0%,$color1), color-stop(100%,$color2)); /* Chrome,Safari4+ */
  background-image: -webkit-linear-gradient($d1, $color1 0%,$color2 100%); /* Chrome10+,Safari5.1+ */
  background-image: -o-linear-gradient($d1, $color1 0%,$color2 100%); /* Opera 11.10+ */
  background-image: -ms-linear-gradient($d1, $color1 0%,$color2 100%); /* IE10+ */
  background-image: linear-gradient(to $d2, $color1 0%,$color2 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$color1}, endColorstr=#{$color2},GradientType=0 ); /* IE6-9 */
}

/*Set Opacity*/
@mixin opacity($opacity) {
  $ie :($opacity * 100);
  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ie})";
  filter: alpha(opacity=#{$ie});
  -moz-opacity:$opacity;
  -khtml-opacity: $opacity;
  opacity: $opacity;
}
/* Border Radius*/

@mixin br($val) {
  -webkit-border-radius: $val;
  -moz-border-radius: $val;
  border-radius: $val;
}


/* Box sizing */

@mixin bs() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* Animate */
@mixin effect($object,$time,$effect) {
  @if $effect == "" { $effect : linear }
  -webkit-transition: $object $time $effect;
  -moz-transition: $object $time $effect;
  -o-transition: $object $time $effect;
  transition: $object $time $effect;
}

@mixin placeholder($color) {
  ::-webkit-input-placeholder {
    color: $color;
  }
  :-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
  ::-moz-placeholder {  /* Firefox 19+ */
    color: $color;
  }
  :-ms-input-placeholder {
    color: $color;
  }
}
@mixin arrow($direction,$size,$color) {
  width: 0;
  height: 0;
  @if $direction == 'left'{
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right:$size solid $color;
  }
  @else if $direction == 'right'{
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left:$size solid $color;
  }
  @else if $direction == 'top'{
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
  @else if $direction == 'bottom'{
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  }
}

@mixin Y-50() {
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin X-50() {
  -ms-transform: translateX(-50%);
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}
@mixin scale2d($scalex,$scaley) {
  @include transform(scale($scalex,$scaley));
}
// translate
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}
@mixin translateX($x) {
  @include transform(translate3d($x,0px,0px));
}
@mixin translateY($y) {
  @include transform(translate3d(0px,$y,0px));
}
@mixin translateZ($z) {
  @include transform(translate3d(0px,0px,$z));
}
@mixin translate3d($x, $y, $z) {
  @include transform(translate3d($x, $y, $z));
}

// Mixin Animations

@mixin anim($s) {
  -webkit-transition: all $s ease;
  -moz-transition:    all $s ease;
  -ms-transition:     all $s ease;
  -o-transition:      all $s ease;
}

@mixin keyframe ($animation_name) {
  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation ($delay, $duration, $animation, $iteration-count:1, $fillmode: forwards) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: $fillmode;
  -webkit-animation-iteration-count: $iteration-count;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: $fillmode;
  -moz-animation-iteration-count: $iteration-count;

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-fill-mode: $fillmode;
  -o-animation-iteration-count: $iteration-count;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: $fillmode;
  animation-iteration-count: $iteration-count;
}

// Simple Scale from 0 to 1
@include keyframe(scale) {
  0% { @include scale2d(0,0); }
  70% { @include scale2d(1.1,1.1); }
  100% { @include scale2d(1,1); }
}

// Bounce
@include keyframe(bounce) {
  0% { @include translate3d(0,0,0); }
  25% { @include translate3d(0,5px,0); }
  50% { @include translate3d(0,0,0); }
  75% { @include translate3d(0,5px,0); }
  100% { @include translate3d(0,0,0); }
}